// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: recommender.proto

package api_gogofaster

import (
	context "context"
	encoding_binary "encoding/binary"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type StringList struct {
	Value []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (m *StringList) Reset()         { *m = StringList{} }
func (m *StringList) String() string { return proto.CompactTextString(m) }
func (*StringList) ProtoMessage()    {}
func (*StringList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c68bee5ca3d81c8, []int{0}
}
func (m *StringList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StringList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StringList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StringList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringList.Merge(m, src)
}
func (m *StringList) XXX_Size() int {
	return m.Size()
}
func (m *StringList) XXX_DiscardUnknown() {
	xxx_messageInfo_StringList.DiscardUnknown(m)
}

var xxx_messageInfo_StringList proto.InternalMessageInfo

func (m *StringList) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type ItemInfo struct {
	Itemid string  `protobuf:"bytes,1,opt,name=itemid,proto3" json:"itemid,omitempty"`
	Score  float32 `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (m *ItemInfo) Reset()         { *m = ItemInfo{} }
func (m *ItemInfo) String() string { return proto.CompactTextString(m) }
func (*ItemInfo) ProtoMessage()    {}
func (*ItemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c68bee5ca3d81c8, []int{1}
}
func (m *ItemInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ItemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ItemInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ItemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemInfo.Merge(m, src)
}
func (m *ItemInfo) XXX_Size() int {
	return m.Size()
}
func (m *ItemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ItemInfo proto.InternalMessageInfo

func (m *ItemInfo) GetItemid() string {
	if m != nil {
		return m.Itemid
	}
	return ""
}

func (m *ItemInfo) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type ItemInfoList struct {
	Iteminfo_ []*ItemInfo `protobuf:"bytes,1,rep,name=iteminfo_,json=iteminfo,proto3" json:"iteminfo_,omitempty"`
}

func (m *ItemInfoList) Reset()         { *m = ItemInfoList{} }
func (m *ItemInfoList) String() string { return proto.CompactTextString(m) }
func (*ItemInfoList) ProtoMessage()    {}
func (*ItemInfoList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c68bee5ca3d81c8, []int{2}
}
func (m *ItemInfoList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ItemInfoList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ItemInfoList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ItemInfoList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemInfoList.Merge(m, src)
}
func (m *ItemInfoList) XXX_Size() int {
	return m.Size()
}
func (m *ItemInfoList) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemInfoList.DiscardUnknown(m)
}

var xxx_messageInfo_ItemInfoList proto.InternalMessageInfo

func (m *ItemInfoList) GetIteminfo_() []*ItemInfo {
	if m != nil {
		return m.Iteminfo_
	}
	return nil
}

type RecommendRequest struct {
	DataId    string      `protobuf:"bytes,1,opt,name=DataId,proto3" json:"DataId,omitempty"`
	GroupId   string      `protobuf:"bytes,2,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	Namespace string      `protobuf:"bytes,3,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	ModelType string      `protobuf:"bytes,4,opt,name=ModelType,proto3" json:"ModelType,omitempty"`
	UserId    string      `protobuf:"bytes,5,opt,name=UserId,proto3" json:"UserId,omitempty"`
	RecallNum int32       `protobuf:"varint,6,opt,name=RecallNum,proto3" json:"RecallNum,omitempty"`
	ItemList  *StringList `protobuf:"bytes,7,opt,name=ItemList,proto3" json:"ItemList,omitempty"`
}

func (m *RecommendRequest) Reset()         { *m = RecommendRequest{} }
func (m *RecommendRequest) String() string { return proto.CompactTextString(m) }
func (*RecommendRequest) ProtoMessage()    {}
func (*RecommendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c68bee5ca3d81c8, []int{3}
}
func (m *RecommendRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RecommendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RecommendRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RecommendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecommendRequest.Merge(m, src)
}
func (m *RecommendRequest) XXX_Size() int {
	return m.Size()
}
func (m *RecommendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecommendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecommendRequest proto.InternalMessageInfo

func (m *RecommendRequest) GetDataId() string {
	if m != nil {
		return m.DataId
	}
	return ""
}

func (m *RecommendRequest) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *RecommendRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *RecommendRequest) GetModelType() string {
	if m != nil {
		return m.ModelType
	}
	return ""
}

func (m *RecommendRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *RecommendRequest) GetRecallNum() int32 {
	if m != nil {
		return m.RecallNum
	}
	return 0
}

func (m *RecommendRequest) GetItemList() *StringList {
	if m != nil {
		return m.ItemList
	}
	return nil
}

type RecommendResponse struct {
	Code    int32         `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Data    *ItemInfoList `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *RecommendResponse) Reset()         { *m = RecommendResponse{} }
func (m *RecommendResponse) String() string { return proto.CompactTextString(m) }
func (*RecommendResponse) ProtoMessage()    {}
func (*RecommendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c68bee5ca3d81c8, []int{4}
}
func (m *RecommendResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RecommendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RecommendResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RecommendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecommendResponse.Merge(m, src)
}
func (m *RecommendResponse) XXX_Size() int {
	return m.Size()
}
func (m *RecommendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecommendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecommendResponse proto.InternalMessageInfo

func (m *RecommendResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RecommendResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RecommendResponse) GetData() *ItemInfoList {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*StringList)(nil), "StringList")
	proto.RegisterType((*ItemInfo)(nil), "ItemInfo")
	proto.RegisterType((*ItemInfoList)(nil), "ItemInfoList")
	proto.RegisterType((*RecommendRequest)(nil), "RecommendRequest")
	proto.RegisterType((*RecommendResponse)(nil), "RecommendResponse")
}

func init() { proto.RegisterFile("recommender.proto", fileDescriptor_9c68bee5ca3d81c8) }

var fileDescriptor_9c68bee5ca3d81c8 = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0x41, 0xcb, 0xd3, 0x40,
	0x10, 0xed, 0x7e, 0x5f, 0xd3, 0xef, 0xcb, 0x44, 0xc1, 0xae, 0x22, 0x4b, 0x91, 0x10, 0x23, 0x68,
	0x4e, 0x11, 0x22, 0x88, 0xa0, 0x27, 0x15, 0x4a, 0xc0, 0xf6, 0xb0, 0xd5, 0x4b, 0x2f, 0x12, 0x93,
	0x69, 0x09, 0x24, 0xd9, 0xb8, 0x9b, 0x14, 0xfc, 0x17, 0xfe, 0x2c, 0x8f, 0x3d, 0x7a, 0x53, 0xda,
	0x3f, 0x22, 0xbb, 0x69, 0xd2, 0xa2, 0x5e, 0x42, 0xde, 0xbc, 0x99, 0x79, 0xf3, 0x1e, 0x0b, 0x53,
	0x89, 0xa9, 0x28, 0x4b, 0xac, 0x32, 0x94, 0x61, 0x2d, 0x45, 0x23, 0x7c, 0x1f, 0x60, 0xd5, 0xc8,
	0xbc, 0xda, 0x7e, 0xc8, 0x55, 0x43, 0x1f, 0x80, 0xb5, 0x4b, 0x8a, 0x16, 0x19, 0xf1, 0xae, 0x03,
	0x9b, 0x77, 0xc0, 0x7f, 0x05, 0xb7, 0x71, 0x83, 0x65, 0x5c, 0x6d, 0x04, 0x7d, 0x08, 0x93, 0xbc,
	0xc1, 0x32, 0xcf, 0x18, 0xf1, 0x48, 0x60, 0xf3, 0x13, 0xd2, 0x93, 0x2a, 0x15, 0x12, 0xd9, 0x95,
	0x47, 0x82, 0x2b, 0xde, 0x01, 0xff, 0x25, 0xdc, 0xe9, 0x27, 0xcd, 0xfe, 0xa7, 0x60, 0x9b, 0xfe,
	0x6a, 0x23, 0x3e, 0x1b, 0x0d, 0x27, 0xb2, 0xc3, 0xbe, 0x83, 0xdf, 0xf6, 0x9c, 0xff, 0x8b, 0xc0,
	0x3d, 0xde, 0xdf, 0xca, 0xf1, 0x6b, 0x8b, 0xaa, 0xd1, 0xd2, 0xef, 0x93, 0x26, 0x89, 0x07, 0xe9,
	0x0e, 0x51, 0x06, 0x37, 0x73, 0x29, 0xda, 0x3a, 0xce, 0x8c, 0xb8, 0xcd, 0x7b, 0x48, 0x1f, 0x81,
	0xbd, 0x4c, 0x4a, 0x54, 0x75, 0x92, 0x22, 0xbb, 0x36, 0xdc, 0xb9, 0xa0, 0xd9, 0x85, 0xc8, 0xb0,
	0xf8, 0xf8, 0xad, 0x46, 0x36, 0xee, 0xd8, 0xa1, 0xa0, 0xd5, 0x3e, 0x29, 0x94, 0x71, 0xc6, 0xac,
	0x4e, 0xad, 0x43, 0x7a, 0x8a, 0x63, 0x9a, 0x14, 0xc5, 0xb2, 0x2d, 0xd9, 0xc4, 0x23, 0x81, 0xc5,
	0xcf, 0x05, 0xfa, 0xac, 0x8b, 0x4a, 0x9b, 0x65, 0x37, 0x1e, 0x09, 0x9c, 0xc8, 0x09, 0xcf, 0xf9,
	0xf2, 0x81, 0xf4, 0x33, 0x98, 0x5e, 0x18, 0x54, 0xb5, 0xa8, 0x14, 0x52, 0x0a, 0xe3, 0x77, 0x22,
	0x43, 0xe3, 0xcf, 0xe2, 0xe6, 0x5f, 0xbb, 0x5b, 0xa0, 0x52, 0xc9, 0x16, 0x7b, 0x77, 0x27, 0x48,
	0x1f, 0xc3, 0x58, 0x27, 0x60, 0x8c, 0x39, 0xd1, 0xdd, 0xf0, 0x32, 0x69, 0x6e, 0xa8, 0x68, 0x0d,
	0xb3, 0xb9, 0xac, 0xd3, 0x41, 0x69, 0x85, 0x72, 0x87, 0x52, 0x7f, 0xf3, 0x14, 0xe9, 0x1b, 0xb8,
	0xff, 0x1f, 0x96, 0x4e, 0xc3, 0xbf, 0xa3, 0x9f, 0xd1, 0xf0, 0x9f, 0x63, 0xdf, 0x3e, 0xf9, 0x71,
	0x70, 0xc9, 0xfe, 0xe0, 0x92, 0xdf, 0x07, 0x97, 0x7c, 0x3f, 0xba, 0xa3, 0xfd, 0xd1, 0x1d, 0xfd,
	0x3c, 0xba, 0xa3, 0xb5, 0x1d, 0x3e, 0x7f, 0xad, 0xcc, 0xae, 0x2f, 0x13, 0xf3, 0xca, 0x5e, 0xfc,
	0x09, 0x00, 0x00, 0xff, 0xff, 0xff, 0x37, 0xea, 0x9b, 0x7a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcRecommendServerServiceClient is the client API for GrpcRecommendServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcRecommendServerServiceClient interface {
	GrpcRecommendServer(ctx context.Context, in *RecommendRequest, opts ...grpc.CallOption) (*RecommendResponse, error)
}

type grpcRecommendServerServiceClient struct {
	cc *grpc.ClientConn
}

func NewGrpcRecommendServerServiceClient(cc *grpc.ClientConn) GrpcRecommendServerServiceClient {
	return &grpcRecommendServerServiceClient{cc}
}

func (c *grpcRecommendServerServiceClient) GrpcRecommendServer(ctx context.Context, in *RecommendRequest, opts ...grpc.CallOption) (*RecommendResponse, error) {
	out := new(RecommendResponse)
	err := c.cc.Invoke(ctx, "/GrpcRecommendServerService/GrpcRecommendServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcRecommendServerServiceServer is the server API for GrpcRecommendServerService service.
type GrpcRecommendServerServiceServer interface {
	GrpcRecommendServer(context.Context, *RecommendRequest) (*RecommendResponse, error)
}

// UnimplementedGrpcRecommendServerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcRecommendServerServiceServer struct {
}

func (*UnimplementedGrpcRecommendServerServiceServer) GrpcRecommendServer(ctx context.Context, req *RecommendRequest) (*RecommendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GrpcRecommendServer not implemented")
}

func RegisterGrpcRecommendServerServiceServer(s *grpc.Server, srv GrpcRecommendServerServiceServer) {
	s.RegisterService(&_GrpcRecommendServerService_serviceDesc, srv)
}

func _GrpcRecommendServerService_GrpcRecommendServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecommendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcRecommendServerServiceServer).GrpcRecommendServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GrpcRecommendServerService/GrpcRecommendServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcRecommendServerServiceServer).GrpcRecommendServer(ctx, req.(*RecommendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcRecommendServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GrpcRecommendServerService",
	HandlerType: (*GrpcRecommendServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GrpcRecommendServer",
			Handler:    _GrpcRecommendServerService_GrpcRecommendServer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recommender.proto",
}

func (m *StringList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StringList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StringList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Value) > 0 {
		for iNdEx := len(m.Value) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Value[iNdEx])
			copy(dAtA[i:], m.Value[iNdEx])
			i = encodeVarintRecommender(dAtA, i, uint64(len(m.Value[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ItemInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ItemInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ItemInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Score != 0 {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.Score))))
		i--
		dAtA[i] = 0x15
	}
	if len(m.Itemid) > 0 {
		i -= len(m.Itemid)
		copy(dAtA[i:], m.Itemid)
		i = encodeVarintRecommender(dAtA, i, uint64(len(m.Itemid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ItemInfoList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ItemInfoList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ItemInfoList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Iteminfo_) > 0 {
		for iNdEx := len(m.Iteminfo_) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Iteminfo_[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRecommender(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *RecommendRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RecommendRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RecommendRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ItemList != nil {
		{
			size, err := m.ItemList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRecommender(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.RecallNum != 0 {
		i = encodeVarintRecommender(dAtA, i, uint64(m.RecallNum))
		i--
		dAtA[i] = 0x30
	}
	if len(m.UserId) > 0 {
		i -= len(m.UserId)
		copy(dAtA[i:], m.UserId)
		i = encodeVarintRecommender(dAtA, i, uint64(len(m.UserId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ModelType) > 0 {
		i -= len(m.ModelType)
		copy(dAtA[i:], m.ModelType)
		i = encodeVarintRecommender(dAtA, i, uint64(len(m.ModelType)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintRecommender(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GroupId) > 0 {
		i -= len(m.GroupId)
		copy(dAtA[i:], m.GroupId)
		i = encodeVarintRecommender(dAtA, i, uint64(len(m.GroupId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DataId) > 0 {
		i -= len(m.DataId)
		copy(dAtA[i:], m.DataId)
		i = encodeVarintRecommender(dAtA, i, uint64(len(m.DataId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RecommendResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RecommendResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RecommendResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRecommender(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintRecommender(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintRecommender(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintRecommender(dAtA []byte, offset int, v uint64) int {
	offset -= sovRecommender(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *StringList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Value) > 0 {
		for _, s := range m.Value {
			l = len(s)
			n += 1 + l + sovRecommender(uint64(l))
		}
	}
	return n
}

func (m *ItemInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Itemid)
	if l > 0 {
		n += 1 + l + sovRecommender(uint64(l))
	}
	if m.Score != 0 {
		n += 5
	}
	return n
}

func (m *ItemInfoList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Iteminfo_) > 0 {
		for _, e := range m.Iteminfo_ {
			l = e.Size()
			n += 1 + l + sovRecommender(uint64(l))
		}
	}
	return n
}

func (m *RecommendRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DataId)
	if l > 0 {
		n += 1 + l + sovRecommender(uint64(l))
	}
	l = len(m.GroupId)
	if l > 0 {
		n += 1 + l + sovRecommender(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovRecommender(uint64(l))
	}
	l = len(m.ModelType)
	if l > 0 {
		n += 1 + l + sovRecommender(uint64(l))
	}
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovRecommender(uint64(l))
	}
	if m.RecallNum != 0 {
		n += 1 + sovRecommender(uint64(m.RecallNum))
	}
	if m.ItemList != nil {
		l = m.ItemList.Size()
		n += 1 + l + sovRecommender(uint64(l))
	}
	return n
}

func (m *RecommendResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovRecommender(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovRecommender(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovRecommender(uint64(l))
	}
	return n
}

func sovRecommender(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRecommender(x uint64) (n int) {
	return sovRecommender(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *StringList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRecommender
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StringList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StringList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecommender
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecommender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = append(m.Value, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRecommender(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRecommender
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ItemInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRecommender
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ItemInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ItemInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Itemid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecommender
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecommender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Itemid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.Score = float32(math.Float32frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipRecommender(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRecommender
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ItemInfoList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRecommender
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ItemInfoList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ItemInfoList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iteminfo_", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRecommender
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRecommender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Iteminfo_ = append(m.Iteminfo_, &ItemInfo{})
			if err := m.Iteminfo_[len(m.Iteminfo_)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRecommender(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRecommender
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RecommendRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRecommender
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RecommendRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RecommendRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecommender
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecommender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DataId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecommender
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecommender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GroupId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecommender
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecommender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModelType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecommender
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecommender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModelType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecommender
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecommender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecallNum", wireType)
			}
			m.RecallNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RecallNum |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRecommender
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRecommender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ItemList == nil {
				m.ItemList = &StringList{}
			}
			if err := m.ItemList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRecommender(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRecommender
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RecommendResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRecommender
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RecommendResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RecommendResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecommender
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecommender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRecommender
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRecommender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &ItemInfoList{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRecommender(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRecommender
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRecommender(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRecommender
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRecommender
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRecommender
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRecommender
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRecommender
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRecommender        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRecommender          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRecommender = fmt.Errorf("proto: unexpected end of group")
)
